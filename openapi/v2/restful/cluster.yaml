openapi: 3.0.1
info:
  title: Horizon-Cluster-Restful
  version: 2.0.0
servers:
  - url: 'http://localhost:8080/'
paths:
  /apis/core/v2/applications/{applicationID}/clusters?environment={environment}&filter={filter}&pageNumber={pageNumber}&pageSize={pageSize}&tagSelector={tagSelector}:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramApplicationID'
      - $ref: 'common.yaml#/components/parameters/queryEnvironment'
        required: false
      - $ref: 'common.yaml#/components/parameters/queryFilter'
      - $ref: 'common.yaml#/components/parameters/pageSize'
      - $ref: 'common.yaml#/components/parameters/pageNumber'
      - name: tagSelector
        in: query
        schema:
          type: string
        description: |
          filter clusters by tags, support operators: =, in, the comma separator acts as a logical AND (&&) operator. For example, if we want to filter clusters by tags(a equals to A and b equals to c or d), the tagSelector is "a=b,b in (c,d)"
    get:
      tags:
        - cluster
      operationId: listClustersByApplication
      summary: List clusters of a specified application
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ListClusterResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/applications/{applicationID}/clusters?scope={scope}&extraOwner={extraOwner}:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramApplicationID'
      - name: scope
        in: query
        description: scope is environment/region, this value can not be edited after created.
        schema:
          type: string
        required: true
      - name: extraOwner
        in: query
        description: extra owner's email
        required: false
        schema:
          type: string
    post:
      tags:
        - cluster
      operationId: createCluster
      summary: Create a cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateClusterRequestV2"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/CreateClusterResponseV2"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/clusters/{clusterID}:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    put:
      tags:
        - cluster
      operationId: updateCluster
      summary: Update a cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateClusterRequestV2"
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
        - cluster
      operationId: getCluster
      summary: Get a cluster
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/GetClusterResponseV2"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    delete:
      tags:
        - cluster
      operationId: deleteCluster
      summary: Delete a cluster
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/free:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: freeCluster
      summary: Free a cluster
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/builddeploy:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: builddeploy
      summary: |
        Build and deploy for a cluster.
        This operation will create a pipelinerun for cluster.
        A cluster can only has one running pipelinerun.
        Return error if there exists a running pipelinerun already.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildDeployRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties: 
                  data:
                    $ref: "#/components/schemas/PipelinerunIDResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/deploy:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: deploy
      summary: |
        Deploy for a cluster with no build.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeployRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/PipelinerunIDResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/rollback:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: rollback
      summary: Rollback a cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RollbackRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/PipelinerunIDResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/restart:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: restart
      summary: Restart a cluster
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/PipelinerunIDResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/next:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: nextCluster
      summary: |
        Promote a cluster to next step.
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/clusters/{clusterID}/promote:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: promoteCluster
      summary: |
        Promote a cluster to skip all steps.
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/clusters/{clusterID}/pause:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: pauseCluster
      summary: |
        Pause a cluster.
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/clusters/{clusterID}/resume:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    post:
      tags:
        - cluster
      operationId: resumeCluster
      summary: |
        Resume a paused cluster.
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/diffs:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
      - name: targetBranch
        in: query
        schema:
          type: string
        required: false
      - name: targetCommit
        in: query
        schema:
          type: string
        required: false
      - name: targetTag
        in: query
        schema:
          type: string
        required: false
    get:
      tags:
        - cluster
      operationId: diffsOfCode
      summary: |
        Get code diffs of a cluster,
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/GetDiffResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/containerlog:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
      - name: podName
        in: query
        schema:
          type: string
        description: name of pod
        required: true
      - name: containerName
        in: query
        schema:
          type: string
        description: name of container
        required: true
      - name: tailLines
        in: query
        schema:
          type: string
        description: lines of log
        required: false
    get:
      tags:
        - cluster
      operationId: getContainerLog
      summary: Get log of a cluster container
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                example: |
                  xxxxxxxxxxxx
                  xxxxxxxxxxxx
                  xxxxxxxxxxxx
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/pods:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
      - name: podName
        in: query
        description: name of pod
        schema:
          type: string
        required: true
    delete:
      tags:
        - cluster
      operationId: deletePods
      summary: delete pods of cluster
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/BatchResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/events:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
      - name: podName
        in: query
        description: name of pod
        schema:
          type: string
        required: true
    get:
      tags:
        - cluster
      operationId: getPodEvents
      summary: get events of pod
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data": [
                          {
                              "eventTimestamp": null,
                              "message": "Successfully assigned test-1/sph-xxxx-78dd96647c-szj2g to k8s1.cloudnative.org",
                              "reason": "Scheduled",
                              "type": "Normal"
                          },
                          {
                              "count": 1,
                              "eventTimestamp": "2021-11-24T12:54:10Z",
                              "message": "Started container sph-xxxx",
                              "reason": "Started",
                              "type": "Normal"
                          }
                      ]
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/outputs:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    get:
      tags:
        - cluster
      operationId: getClusterOutputs
      summary: get cluster outputs
      responses:
        "200":
          description: Success
          content:
            application/yaml:
              schema:
                example: |
                  SyncDomainName:
                    Description: the sync domain of the the
                    Value: horizon.com
                  DebugPort:
                    Description: the debug port
                    Value: 1000
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/pod:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
      - name: podName
        in: query
        description: name of pod
        schema:
          type: string
        required: true
    get:
      tags:
        - cluster
      operationId: getClusterPod
      summary: get cluster Pod with complete info from k8s
      responses:
        "200":
          description: Success
          content:
            application/yaml:
              schema:
                example: |
                  {
                      "data": {
                          "metadata": {
                              "name": "sph-test-6f94ff78bb-g6xr6",
                              "generateName": "sph-test-6f94ff78bb-",
                              "namespace": "dev-1",
                              "selfLink": "/api/v2/namespaces/dev-1/pods/sph-test-6f94ff78bb-g6xr6",
                              "uid": "61c18122-a49c-47bc-ad6f-8ae2152adc4a",
                              "resourceVersion": "476600208",
                              "creationTimestamp": "2022-07-27T09:46:38Z",
                              "labels": {
                                  "cloudnative.com/application": "sph",
                                  "cloudnative.com/cluster": "sph-test",
                                  "cloudnative.com/environment": "dev",
                                  "rollouts-pod-template-hash": "6f94ff78bb"
                              },
                          },
                          "spec": {
                              "volumes": [],
                              "initContainers": [],
                              "containers": [
                                  {
                                      "name": "sph-test",
                                      "image": "harbor.com/cloudnative-template/javaapp:v1.2.0",
                                      "env": [],
                                      "resources": {
                                          "limits": {
                                              "cpu": "1",
                                              "ephemeral-storage": "60Gi",
                                              "memory": "2Gi"
                                          },
                                          "requests": {
                                              "cpu": "250m",
                                              "ephemeral-storage": "128Mi",
                                              "memory": "769Mi"
                                          }
                                      },
                                      "volumeMounts": [],
                                      "terminationMessagePath": "/dev/termination-log",
                                      "terminationMessagePolicy": "File",
                                      "imagePullPolicy": "IfNotPresent",
                                      "securityContext": {
                                          "capabilities": {
                                              "add": [
                                                  "SYS_PTRACE"
                                              ]
                                          },
                                          "runAsUser": 10001,
                                          "runAsGroup": 10001
                                      }
                                  }
                              ],
                          }
                      }
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/dashboards:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
    get:
      tags:
        - cluster
      operationId: getGrafanaDashboards
      summary: get cluster's grafana dashboards
      responses:
        "200":
          description: Success
          content:
            application/yaml:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/GetGrafanaDashboardsResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters/{clusterID}/containers:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramClusterID'
      - name: podName
        in: query
        description: name of pod
        schema:
          type: string
        required: true
    get:
      tags:
        - cluster
      operationId: getContainers
      summary: get containers in a pod
      responses:
        "200":
          description: Success
          content:
            application/yaml:
              schema:
                example: |
                  {
                    "data":[
                      {
                        "name": "javaapp-demo-3",
                        "image": "hxxx",
                        "env": [
                          {
                            "name": "mainClassName",
                            "value": "com.example.demo.DemoApplication"
                          }
                        ],
                        "commands": null,
                        "args": null,
                        "volumeMounts": [
                          {
                            "name": "artifacts",
                            "readOnly": false,
                            "mountPath": "/artifacts",
                            "subPath": "",
                            "volume": {
                              "name": "artifacts",
                              "emptyDir": {}
                            }
                          }
                        ],
                        "securityContext": {
                          "capabilities": {
                            "add": [
                              "SYS_PTRACE"
                            ]
                          },
                          "runAsUser": 10001,
                          "runAsGroup": 10001
                        },
                        "status": {
                          "name": "javaapp-demo-3",
                          "state": {
                            "running": {
                              "startedAt": "2023-01-05T03:05:57Z"
                            }
                          },
                          "started": true
                        },
                        "livenessProbe": {},
                        "readinessProbe": {},
                        "startupProbe": {}
                      }
                    ]
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/clusters:
    get:
      tags:
        - cluster
      description: list cluster
      operationId: listClusters
      parameters:
        - name: userID
          in: query
          schema:
            type: number
        - name: applicationID
          in: query
          schema:
            type: number
        - name: filter
          in: query
          schema:
            type: string
        - name: environment
          in: query
          schema:
            type: string
        - name: tagSelector
          in: query
          schema:
            type: string
        - name: template
          description: template name
          in: query
          schema:
            type: string
        - name: release
          in: query
          schema:
            type: string
        - name: isFavorite
          description: return user's favorite cluster
          in: query
          schema:
            type: boolean
        - name: withFavorite
          description: return cluster with favorite field
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: |
                {
                  "data": {
                    "total": 140,
                    "items": [
                      {
                        "id": 58694,
                        "name": "sph-sphtesttt",
                        "description": "",
                        "scope": {
                          "environment": "dev",
                          "region": "hz-dev2",
                          "regionDisplayName": "hangzhou"
                        },
                        "template": {
                          "name": "javaapp",
                          "release": "v0.0.0-sph-rc1"
                        },
                        "git": {
                          "sshURL": "ssh://git@cloudnative.com:22222/app/app-demo.git",
                          "httpURL": "https://cloudnative.com:22222/app/app-demo"
                        },
                        "createdAt": "2022-09-21T11:03:56+08:00",
                        "updatedAt": "2022-10-18T19:40:06+08:00",
                        "fullName": "gjq-test/sph/sph/sph-sphtesttt",
                        "fullPath": "/gjq-test/sph/sph/sph-sphtesttt"
                      }
                    ]
                  }
                }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v2/cluster/{clusterID}/step:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationId: getClusterStep
      summary: Get step when releasing a cluster by canary release
      description: |
        Get step when releasing a cluster by canary release, only works for argoproj.io.rollout
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {"data":{"index":1,"total":4,"replicas":[1,1,1,1],"manualPaused":false}}
                properties:
                  data:
                    type: object
                    properties:
                      index:
                        type: number
                        description: current release step
                      manualPaused:
                        type: boolean
                        description: whether the cluster paused manually when releasing
                      replicas:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                        description: pods' count for every step
                      total:
                        type: number
                        description: count of all steps

  /apis/core/v2/cluster/{clusterID}/resourcetree:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationId: getClusterResourceTree
      summary: Get resource from k8s in tree format
      description:
        Get resource from k8s in tree format, pod will has a extra field 'podDetail'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      nodes:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            uid:
                              type: string
                              description: uid of resource in k8s
                            kind:
                              type: string
                              description: kind of resource in k8s
                            createdAt:
                              type: string
                              description: creation time of resource
                            health:
                              type: object
                              properties:
                                status:
                                  type: string
                                  description: health status
                            group:
                              type: string
                              description: api group of resource in k8s
                            info:
                              type: array
                              description: some extra info
                              items:
                                type: object
                                example: |
                                  {name: "Revision", value: "Rev:6"}
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                            name:
                              type: string
                              description: name of resource
                            namespace:
                              type: string
                              description: namespace of resource in k8s
                            parentRefs:
                              type: array
                              description: parent references of resource, null if it has no parent.
                              items:
                                type: object
                                example: |
                                  { "group": "argoproj.io", "kind": "Rollout", "namespace": "online-64", "name": "for-argocd-error", "uid": "737218b7-1d44-427b-9f5d-0e5d99bee0d1" }
                            podDetail:
                              type: object
                              description: Shortcut of a pod manifest, exists only if resource is a pod
                              properties:
                                metadata:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    creationTimestamp:
                                      type: string
                                      format: date-time
                                    deletionTimestamp:
                                      type: string
                                      format: date-time
                                    labels:
                                      type: object
                                    annotations:
                                      type: object
                                spec:
                                  type: object
                                  properties:
                                    containers:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          image:
                                            type: string
                                          imagePullPolicy:
                                            type: string
                                          ports:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                containerPort:
                                                  type: integer
                                                protocol:
                                                  type: string
                                          resources:
                                            type: object
                                          volumeMounts:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                name:
                                                  type: string
                                                mountPath:
                                                  type: string
                                    volumes:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          persistentVolumeClaim:
                                            type: object
                                            properties:
                                              claimName:
                                                type: string

  /apis/core/v2/cluster/{clusterID}/buildstatus:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationId: getClusterBuildStatus
      summary: Get build status
      description:
        check whether a building task is running.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      latestPipelinerun:
                        type: object
                        description: last pipelinerun
                        properties:
                          action:
                            type: string
                            description: "type of pipelinerun: builddeploy, deploy, rollback"
                          id:
                            type: number
                            description: id of a latestPipelinerun
                      runningTask:
                        type: object
                        properties:
                          task:
                            type: string
                            description: task running currently
  /apis/core/v2/clusters/{clusterID}/status:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationId: getClusterStatus
      summary: Get status
      description:
        "check the status of current cluster: healthy, creating, progressing, suspended, manualPaused, notHealthy, notFound, freeing, freed, deleting"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          status:
                            type: string
                            description: healthy, creating, progressing, suspended, manualPaused, notHealthy, notFound, freeing, freed, deleting

  /apis/core/v2/clusters/{clusterID}/exec:
    parameters:
      - $ref: "common.yaml#/components/parameters/paramClusterID"
    post:
      tags:
        - cluster
      operationId: execClusterCommand
      summary: Execute a command in specified pods in a cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                podList:
                  type: array
                  items:
                    type: string
                commands:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        result:
                          type: boolean
                        error:
                          type: object
                        stderr:
                          type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/clusters/{clusterId}/favorite:
    parameters:
      - name: clusterId
        in: path
        required: true
        description: The ID of the cluster to add to favorites
        schema:
          type: integer
          example: 60517
    post:
      summary: Add cluster to favorites
      operationId: addFavoriteCluster
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
    delete:
      summary: Remove cluster from favorites
      operationId: removeFavoriteCluster
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}



components:
  schemas:
    ID:
      type: integer
      format: int64
      description: id of cluster
    Name:
      type: string
      description: name of cluster
    Description:
      type: string
      description: description
    Environment:
      type: string
      description: name of environment
    Region:
      type: string
      description: name of region
    RegionDisplayName:
      type: string
      description: display name of region
    Scope:
      type: object
      description: scope of cluster, including environment and region
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
        region:
          $ref: '#/components/schemas/Region'
        regionDisplayName:
          $ref: '#/components/schemas/RegionDisplayName'
    Template:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/TemplateName'
        release:
          $ref: '#/components/schemas/TemplateRelease'
    TemplateName:
      type: string
      description: name of template
    TemplateRelease:
      type: string
      description: release version of template
    URL:
      type: string
    Subfolder:
      type: string
    Branch:
      type: string
    GitTag:
      type: string
    Commit:
      type: string
    Git:
      type: object
      properties:
        url:
          $ref: "#/components/schemas/URL"
        subfolder:
          $ref: "#/components/schemas/Subfolder"
        branch:
          $ref: "#/components/schemas/Branch"
        tag:
          $ref: "#/components/schemas/GitTag"
        commit:
          $ref: "#/components/schemas/Commit"
    GitResponse:
      type: object
      properties:
        sshURL:
          $ref: '#/components/schemas/SSHURL'
        httpURL:
          $ref: '#/components/schemas/HTTPURL'
    SSHURL:
      type: string
      description: ssh url of git repository
    HTTPURL:
      type: string
      description: http url of git repository
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      description: tag of cluster
      properties:
        key:
          $ref: '#/components/schemas/Key'
        value:
          $ref: '#/components/schemas/Value'
    Key:
      type: string
    Value:
      type: string
    CreatedAt:
      $ref: "common.yaml#/components/schemas/Date"
    UpdatedAt:
      $ref: "common.yaml#/components/schemas/Date"
    Priority:
      type: string
    ExpireTime:
      type: string
    BuildConfig:
      type: object
      additionalProperties: true
    Manifest:
      type: object
      additionalProperties: true
    TemplateConfig:
      type: object
      additionalProperties: true
    TemplateInfo:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/TemplateName"
        release:
          $ref: "#/components/schemas/TemplateRelease"
    ExtraMembers:
      type: object
      additionalProperties:
        type: string
    FullPath:
      type: string
    FullName:
      type: string
    ApplicationID:
      type: integer
    ApplicationName:
      type: string
    Application:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ApplicationID"
        name:
          $ref: "#/components/schemas/ApplicationName"

    ListClusterResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        name:
          $ref: "#/components/schemas/Name"
        description:
          $ref: "#/components/schemas/Description"
        scope:
          $ref: "#/components/schemas/Scope"
        template:
          $ref: "#/components/schemas/Template"
        git:
          $ref: "#/components/schemas/GitResponse"
        tags:
          $ref: "#/components/schemas/Tags"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"

    CreateClusterRequestV2:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          $ref: "#/components/schemas/Description"
        priority:
          $ref: "#/components/schemas/Priority"
        expireTime:
          $ref: "#/components/schemas/ExpireTime"
        git:
          $ref: "#/components/schemas/Git"
        tags:
          $ref: "#/components/schemas/Tags"
        buildConfig:
          $ref: "#/components/schemas/BuildConfig"
        templateInfo:
          $ref: "#/components/schemas/TemplateInfo"
        templateConfig:
          $ref: "#/components/schemas/TemplateConfig"
        extraMembers:
          $ref: "#/components/schemas/ExtraMembers"

    CreateClusterResponseV2:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        name:
          $ref: "#/components/schemas/Name"
        fullPath:
          $ref: "#/components/schemas/FullPath"
        applicationID:
          $ref: "#/components/schemas/ApplicationID"
        scope:
          $ref: "#/components/schemas/Scope"
        application:
          $ref: "#/components/schemas/Application"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"

    UpdateClusterRequestV2:
      type: object
      properties:
        description:
          $ref: "#/components/schemas/Description"
        priority:
          $ref: "#/components/schemas/Priority"
        expireTime:
          $ref: "#/components/schemas/ExpireTime"
        environment:
          $ref: "#/components/schemas/Environment"
        region:
          $ref: "#/components/schemas/Region"
        git:
          $ref: "#/components/schemas/Git"
        buildConfig:
          $ref: "#/components/schemas/BuildConfig"
        templateInfo:
          $ref: "#/components/schemas/TemplateInfo"
        templateConfig:
          $ref: "#/components/schemas/TemplateConfig"

    GetClusterResponseV2:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        name:
          $ref: "#/components/schemas/Name"
        description:
          $ref: "#/components/schemas/Description"
        priority:
          $ref: "#/components/schemas/Priority"
        expireTime:
          $ref: "#/components/schemas/ExpireTime"
        scope:
          $ref: "#/components/schemas/Scope"
        fullPath:
          $ref: "#/components/schemas/FullPath"
        applicationID:
          $ref: "#/components/schemas/ApplicationID"
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        tags:
          $ref: "#/components/schemas/Tags"
        git:
          $ref: "#/components/schemas/Git"
        buildConfig:
          $ref: "#/components/schemas/BuildConfig"
        templateInfo:
          $ref: "#/components/schemas/TemplateInfo"
        templateConfig:
          $ref: "#/components/schemas/TemplateConfig"
        manifest:
          $ref: "#/components/schemas/Manifest"
        status:
          type: string
        ttlInSeconds:
          type: integer
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"
        createdBy:
          $ref: "common.yaml#/components/schemas/User"
        updatedBy:
          $ref: "common.yaml#/components/schemas/User"

    BuildDeployRequestGit:
      type: object
      properties:
        branch:
          $ref: "#/components/schemas/Branch"
        tag:
          $ref: "#/components/schemas/GitTag"
        commit:
          $ref: "#/components/schemas/Commit"

    Title:
      type: string

    BuildDeployRequest:
      type: object
      properties:
        title:
          $ref: "#/components/schemas/Title"
        description:
          $ref: "#/components/schemas/Description"
        git:
          $ref: "#/components/schemas/BuildDeployRequestGit"

    PipelinerunID:
      type: integer

    PipelinerunIDResponse:
      type: object
      properties:
        pipelinerunID:
          $ref: "#/components/schemas/PipelinerunID"
  
    DeployRequest:
      type: object
      properties:
        title:
          $ref: "#/components/schemas/Title"
        description:
          $ref: "#/components/schemas/Description"

    RollbackRequest:
      type: object
      properties:
        pipelinerunID:
          $ref: "#/components/schemas/PipelinerunID"

    CodeInfo:
      type: object
      properties:
        branch:
          $ref: "#/components/schemas/Branch"
        tag:
          $ref: "#/components/schemas/GitTag"
        commitID:
          $ref: "#/components/schemas/Commit"
        commitMsg:
          type: string
          description: commit message
        Link:
          type: string
          description: code history link

    GetDiffResponse:
      type: object
      properties:
        codeInfo:
          $ref: "#/components/schemas/CodeInfo"
        ConfigDiff:
          type: string

    Result:
      type: boolean
    Error:
      type: object
    ErrorMsg:
      type: string

    OperationResult:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/Result"
        error:
          $ref: "#/components/schemas/Error"
        errorMsg:
          $ref: "#/components/schemas/ErrorMsg"

    BatchResponse:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/OperationResult"

    DashBoard:
      type: object
      properties:
        title:
          $ref: "#/components/schemas/Title"
        uid:
          type: string
        tags:
          type: array
          items:
            type: string

    GetGrafanaDashboardsResponse:
      type: object
      properties:
        host:
          type: string
        params:
          type: object
          additionalProperties:
            type: string
        dashboards:
          type: array
          items:
            $ref: "#/components/schemas/DashBoard"

